main_category;sub_category;nlp_question;cypher_code;actual_returned_output
Simple Questions;Attribute Queries;What is the tagline of the movie The Matrix?;MATCH (m:Movie {title: "The Matrix"}) RETURN m.tagline;2.json
Simple Questions;Attribute Queries;When was the movie The Matrix released?;MATCH (m:Movie {title: "The Matrix"}) RETURN m.released;3.json
Simple Questions;Attribute Queries;What is the birth year of Keanu Reeves?;MATCH (p:Person {name: "Keanu Reeves"}) RETURN p.born;4.json
Simple Questions;Relationship Queries;Who acted in the movie The Matrix?;MATCH (a:Person)-[:ACTED_IN]->(m:Movie {title: "The Matrix"}) RETURN a.name;5.json
Simple Questions;Relationship Queries;Who produced the movie The Matrix?;MATCH (p:Person)-[:PRODUCED]->(m:Movie {title: "The Matrix"}) RETURN p.name;6.json
Simple Questions;Relationship Queries;Who wrote the movie A Few Good Men?;MATCH (w:Person)-[:WROTE]->(m:Movie {title: "A Few Good Men"}) RETURN w.name;7.json
Simple Questions;Relationship Filter Queries;What are the titles and release years of movies directed by Lana Wachowski that were released after 2003?;MATCH (d:Person {name: "Lana Wachowski"})-[:DIRECTED]->(m:Movie) WHERE m.released > 2003 RETURN m.title AS MovieTitle, m.released AS ReleaseYear;8.json
Simple Questions;Relationship Filter Queries;What are the titles and release years of movies in which Keanu Reeves acted after the year 2000?;MATCH (a:Person {name: "Keanu Reeves"})-[:ACTED_IN]->(m:Movie) WHERE m.released > 2000 RETURN m.title AS MovieTitle, m.released AS ReleaseYear;9.json
Simple Questions;Relationship Filter Queries;What are the titles and release years of movies produced by Joel Silver that were released after 2006?;MATCH (p:Person {name: "Joel Silver"})-[:PRODUCED]->(m:Movie) WHERE m.released > 2006 RETURN m.title AS MovieTitle, m.released AS ReleaseYear;10.json
Advanced Queries;Two Relationships;What is the name of the movie that Lilly Wachowski directed and in which Emil Eifrem acted?;MATCH (d:Person {name: "Lilly Wachowski"})-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(a:Person {name: "Emil Eifrem"}) RETURN m.title;11.json 
Advanced Queries;Two Relationships;What is the name of the movie that Jim Cash wrote and in which Val Kilmer acted?;MATCH (w:Person {name: "Jim Cash"})-[:WROTE]->(m:Movie)<-[:ACTED_IN]-(a:Person {name: "Val Kilmer"}) RETURN m.title;12.json
Advanced Queries;Two Relationships;What movies did Rob Reiner direct that were also written by Aaron Sorkin?;MATCH (w:Person {name: "Rob Reiner"})-[:DIRECTED]->(m:Movie)<-[:WROTE]-(a:Person {name: "Aaron Sorkin"}) RETURN m.title;13.json
Advanced Queries;Two Relationships with Attribute Filter Queries;What movies did Rob Reiner direct and Aaron Sorkin write that were released after 1990?;MATCH (w:Person {name: "Rob Reiner"})-[:DIRECTED]->(m:Movie)<-[:WROTE]-(a:Person {name: "Aaron Sorkin"}) WHERE m.released > 1990 RETURN m.title;14.json
Advanced Queries;Two Relationships with Attribute Filter Queries;Which movies did Jim Cash write and Val Kilmer act in, released between 1986 and 2000, that do not have a rating? Return movie, released date and rating.;MATCH (w:Person {name: "Jim Cash"})-[:WROTE]->(m:Movie)<-[:ACTED_IN]-(a:Person {name: "Val Kilmer"}) WHERE m.released >= 1986 AND m.released <= 2000 AND m.rating is null RETURN m.title, m.released, m.rating;15.json
Advanced Queries;Two Relationships with Attribute Filter Queries;What movies did Lilly Wachowski direct and Emil Eifrem act in, that were released in or after 1999, and have no rating information?;MATCH (d:Person {name: "Lilly Wachowski"})-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(a:Person {name: "Emil Eifrem"}) WHERE m.released >= 1999 AND m.rating is null RETURN m.title;16.json
Advanced Queries;Exclusions of Entities;What movies did Lana Wachowski direct that do not feature Keanu Reeves as an actor?;MATCH (d:Person {name: "Lana Wachowski"})-[:DIRECTED]->(m:Movie) OPTIONAL MATCH (m)<-[:ACTED_IN]-(a:Person {name: "Keanu Reeves"}) WHERE a IS NULL RETURN m.title;17.json
Advanced Queries;Exclusions of Entities;What movies did Lana Wachowski direct that do not feature any of the following actors: Emil Eifrem, Hugo Weaving, Laurence Fishburne, Carrie-Anne Moss, or Keanu Reeves?;MATCH (d:Person {name: "Lana Wachowski"})-[:DIRECTED]->(m:Movie) OPTIONAL MATCH (m)<-[:ACTED_IN]-(a:Person {name: ["Emil Eifrem", "Hugo Weaving", "Laurence Fishburne", "Carrie-Anne Moss", "Keanu Reeves"]}) WHERE a IS NULL RETURN m.title;18.json
Advanced Queries;Exclusions of Entities;What movies did Taylor Hackford direct that do not feature any of the following actors: Al Pacino, Charlize Theron, or Keanu Reeves?;MATCH (d:Person {name: "Taylor Hackford"})-[:DIRECTED]->(m:Movie) OPTIONAL MATCH (m)<-[:ACTED_IN]-(a:Person {name: ["Al Pacino", "Charlize Theron", "Keanu Reeves"]}) WHERE a IS NULL RETURN m.title;19.json
Advanced Queries;Relationship with Aggregation Queries;Which producers have produced at least four movies released after 1999?;MATCH (p:Person)-[:PRODUCED]->(m:Movie) WHERE m.released > 1999 WITH p, COUNT(m) AS recentMovies WHERE recentMovies >= 4 RETURN p.name, recentMovies;20.json
Advanced Queries;Relationship with Aggregation Queries;How many movies did each director direct between 2009 and 2020?;MATCH (d:Person)-[:DIRECTED]->(m:Movie) WHERE  m.released>2008 and m.released<=2020 WITH d, COUNT(m) AS highlyRatedMovies RETURN d.name, highlyRatedMovies;21.json
Advanced Queries;Relationship with Aggregation Queries;What is the total sum of ratings for movies directed by each director that were released from 2012 onwards?;MATCH (d:Person)-[:DIRECTED]->(m:Movie) WHERE m.released >= 2012 WITH d, SUM(m.rating) AS totalRating RETURN d.name, totalRating;22.json
Advanced Queries;Multi-Hop and Nested Relationship Queries;Which movies have different people as the writer, director, and actor?;MATCH (w:Person)-[:WROTE]->(m:Movie)<-[:DIRECTED]-(d:Person) MATCH (m)<-[:ACTED_IN]-(a:Person) WHERE w <> d AND d <> a AND w <> a RETURN DISTINCT m.title AS Movie, w.name AS Writer, d.name AS Director, a.name AS Actor;23.json
Advanced Queries;Multi-Hop and Nested Relationship Queries;Which movies have different people as the reviewer, producer, and writer?;MATCH (r:Person)-[:REVIEWED]->(m:Movie)<-[:PRODUCED]-(p:Person) MATCH (m)<-[:WROTE]-(w:Person) WHERE r <> p AND p <> w AND r <> w RETURN DISTINCT m.title AS Movie, r.name AS Reviewer, p.name AS Producer, w.name AS Writer;24.json
Advanced Queries;Multi-Hop and Nested Relationship Queries;Which movies have different people as the actor, reviewer, and writer, and the actor was born after 1970?;MATCH (a:Person)-[:ACTED_IN]->(m:Movie) MATCH (m)<-[:REVIEWED]-(r:Person) MATCH (m)<-[:WROTE]-(w:Person) WHERE a <> r AND r <> w AND a <> w AND a.born > 1970 RETURN DISTINCT m.title AS Movie, a.name AS Actor, r.name AS Reviewer, w.name AS Writer;25.json 
Advanced Queries;Sub-Query-Cardinality Queries;Which node has the highest number of connections overall across all relationship types in the graph, and what is the relationship type associated with it?;MATCH ()-[r]->() WITH DISTINCT type(r) AS relationshipType CALL { WITH relationshipType MATCH (n)-[r]->()  WHERE type(r) = relationshipType RETURN n AS Node, COUNT(r) AS connectionCount ORDER BY connectionCount DESC LIMIT 1} RETURN relationshipType AS RelationshipType, Node.name AS NodeName, connectionCount AS NumberOfConnections ORDER BY NumberOfConnections desc limit 1;26.json
Advanced Queries;Sub-Query-Cardinality Queries;Which node has the lowest number of connections overall across all relationship types in the graph, and what is the relationship type associated with it?;MATCH ()-[r]->() WITH DISTINCT type(r) AS relationshipType CALL { WITH relationshipType MATCH (n)-[r]->()  WHERE type(r) = relationshipType RETURN n AS Node, COUNT(r) AS connectionCount ORDER BY connectionCount DESC LIMIT 1} RETURN relationshipType AS RelationshipType, Node.name AS NodeName, connectionCount AS NumberOfConnections ORDER BY NumberOfConnections asc limit 1;27.json
Advanced Queries;Sub-Query-Cardinality Queries;Which nodes in the graph have exactly 6 connections for any relationship type, and what is the relationship type associated with each node? (use sub query);CALL { MATCH (n)-[r]->() WITH n, type(r) AS relationshipType, COUNT(r) AS connectionCount WHERE connectionCount = 6 RETURN n AS Node, relationshipType AS RelationshipType, connectionCount } RETURN Node.name AS NodeName, RelationshipType, connectionCount AS NumberOfConnections;28.json